// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/terraform-provider-iris/models"
)

// CreateDHCPSubnetReservationReader is a Reader for the CreateDHCPSubnetReservation structure.
type CreateDHCPSubnetReservationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDHCPSubnetReservationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDHCPSubnetReservationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDHCPSubnetReservationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateDHCPSubnetReservationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDHCPSubnetReservationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateDHCPSubnetReservationCreated creates a CreateDHCPSubnetReservationCreated with default headers values
func NewCreateDHCPSubnetReservationCreated() *CreateDHCPSubnetReservationCreated {
	return &CreateDHCPSubnetReservationCreated{}
}

/*
CreateDHCPSubnetReservationCreated describes a response with status code 201, with default header values.

Returns the newly created subnet's reservation object.
*/
type CreateDHCPSubnetReservationCreated struct {
	Payload *models.Reservation
}

// IsSuccess returns true when this create d h c p subnet reservation created response has a 2xx status code
func (o *CreateDHCPSubnetReservationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create d h c p subnet reservation created response has a 3xx status code
func (o *CreateDHCPSubnetReservationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create d h c p subnet reservation created response has a 4xx status code
func (o *CreateDHCPSubnetReservationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create d h c p subnet reservation created response has a 5xx status code
func (o *CreateDHCPSubnetReservationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create d h c p subnet reservation created response a status code equal to that given
func (o *CreateDHCPSubnetReservationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create d h c p subnet reservation created response
func (o *CreateDHCPSubnetReservationCreated) Code() int {
	return 201
}

func (o *CreateDHCPSubnetReservationCreated) Error() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationCreated  %+v", 201, o.Payload)
}

func (o *CreateDHCPSubnetReservationCreated) String() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationCreated  %+v", 201, o.Payload)
}

func (o *CreateDHCPSubnetReservationCreated) GetPayload() *models.Reservation {
	return o.Payload
}

func (o *CreateDHCPSubnetReservationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Reservation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDHCPSubnetReservationBadRequest creates a CreateDHCPSubnetReservationBadRequest with default headers values
func NewCreateDHCPSubnetReservationBadRequest() *CreateDHCPSubnetReservationBadRequest {
	return &CreateDHCPSubnetReservationBadRequest{}
}

/*
CreateDHCPSubnetReservationBadRequest describes a response with status code 400, with default header values.

Bad parameters were provided.
*/
type CreateDHCPSubnetReservationBadRequest struct {
}

// IsSuccess returns true when this create d h c p subnet reservation bad request response has a 2xx status code
func (o *CreateDHCPSubnetReservationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create d h c p subnet reservation bad request response has a 3xx status code
func (o *CreateDHCPSubnetReservationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create d h c p subnet reservation bad request response has a 4xx status code
func (o *CreateDHCPSubnetReservationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create d h c p subnet reservation bad request response has a 5xx status code
func (o *CreateDHCPSubnetReservationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create d h c p subnet reservation bad request response a status code equal to that given
func (o *CreateDHCPSubnetReservationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create d h c p subnet reservation bad request response
func (o *CreateDHCPSubnetReservationBadRequest) Code() int {
	return 400
}

func (o *CreateDHCPSubnetReservationBadRequest) Error() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationBadRequest ", 400)
}

func (o *CreateDHCPSubnetReservationBadRequest) String() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationBadRequest ", 400)
}

func (o *CreateDHCPSubnetReservationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDHCPSubnetReservationConflict creates a CreateDHCPSubnetReservationConflict with default headers values
func NewCreateDHCPSubnetReservationConflict() *CreateDHCPSubnetReservationConflict {
	return &CreateDHCPSubnetReservationConflict{}
}

/*
CreateDHCPSubnetReservationConflict describes a response with status code 409, with default header values.

Subnet's reservation already exists.
*/
type CreateDHCPSubnetReservationConflict struct {
}

// IsSuccess returns true when this create d h c p subnet reservation conflict response has a 2xx status code
func (o *CreateDHCPSubnetReservationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create d h c p subnet reservation conflict response has a 3xx status code
func (o *CreateDHCPSubnetReservationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create d h c p subnet reservation conflict response has a 4xx status code
func (o *CreateDHCPSubnetReservationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create d h c p subnet reservation conflict response has a 5xx status code
func (o *CreateDHCPSubnetReservationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create d h c p subnet reservation conflict response a status code equal to that given
func (o *CreateDHCPSubnetReservationConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create d h c p subnet reservation conflict response
func (o *CreateDHCPSubnetReservationConflict) Code() int {
	return 409
}

func (o *CreateDHCPSubnetReservationConflict) Error() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationConflict ", 409)
}

func (o *CreateDHCPSubnetReservationConflict) String() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationConflict ", 409)
}

func (o *CreateDHCPSubnetReservationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateDHCPSubnetReservationInternalServerError creates a CreateDHCPSubnetReservationInternalServerError with default headers values
func NewCreateDHCPSubnetReservationInternalServerError() *CreateDHCPSubnetReservationInternalServerError {
	return &CreateDHCPSubnetReservationInternalServerError{}
}

/*
CreateDHCPSubnetReservationInternalServerError describes a response with status code 500, with default header values.

Unable to create Subnet's resevration.
*/
type CreateDHCPSubnetReservationInternalServerError struct {
}

// IsSuccess returns true when this create d h c p subnet reservation internal server error response has a 2xx status code
func (o *CreateDHCPSubnetReservationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create d h c p subnet reservation internal server error response has a 3xx status code
func (o *CreateDHCPSubnetReservationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create d h c p subnet reservation internal server error response has a 4xx status code
func (o *CreateDHCPSubnetReservationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create d h c p subnet reservation internal server error response has a 5xx status code
func (o *CreateDHCPSubnetReservationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create d h c p subnet reservation internal server error response a status code equal to that given
func (o *CreateDHCPSubnetReservationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create d h c p subnet reservation internal server error response
func (o *CreateDHCPSubnetReservationInternalServerError) Code() int {
	return 500
}

func (o *CreateDHCPSubnetReservationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationInternalServerError ", 500)
}

func (o *CreateDHCPSubnetReservationInternalServerError) String() string {
	return fmt.Sprintf("[POST /dhcp/subnet/{subnetId}/reservation][%d] createDHCPSubnetReservationInternalServerError ", 500)
}

func (o *CreateDHCPSubnetReservationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
