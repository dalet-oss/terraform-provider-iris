// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteDHCPSubnetReservationReader is a Reader for the DeleteDHCPSubnetReservation structure.
type DeleteDHCPSubnetReservationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDHCPSubnetReservationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDHCPSubnetReservationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteDHCPSubnetReservationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDHCPSubnetReservationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDHCPSubnetReservationOK creates a DeleteDHCPSubnetReservationOK with default headers values
func NewDeleteDHCPSubnetReservationOK() *DeleteDHCPSubnetReservationOK {
	return &DeleteDHCPSubnetReservationOK{}
}

/*
DeleteDHCPSubnetReservationOK describes a response with status code 200, with default header values.

The reservation has been successfully removed.
*/
type DeleteDHCPSubnetReservationOK struct {
}

// IsSuccess returns true when this delete d h c p subnet reservation o k response has a 2xx status code
func (o *DeleteDHCPSubnetReservationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete d h c p subnet reservation o k response has a 3xx status code
func (o *DeleteDHCPSubnetReservationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d h c p subnet reservation o k response has a 4xx status code
func (o *DeleteDHCPSubnetReservationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete d h c p subnet reservation o k response has a 5xx status code
func (o *DeleteDHCPSubnetReservationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d h c p subnet reservation o k response a status code equal to that given
func (o *DeleteDHCPSubnetReservationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete d h c p subnet reservation o k response
func (o *DeleteDHCPSubnetReservationOK) Code() int {
	return 200
}

func (o *DeleteDHCPSubnetReservationOK) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}/reservation/{macID}][%d] deleteDHCPSubnetReservationOK ", 200)
}

func (o *DeleteDHCPSubnetReservationOK) String() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}/reservation/{macID}][%d] deleteDHCPSubnetReservationOK ", 200)
}

func (o *DeleteDHCPSubnetReservationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDHCPSubnetReservationNotFound creates a DeleteDHCPSubnetReservationNotFound with default headers values
func NewDeleteDHCPSubnetReservationNotFound() *DeleteDHCPSubnetReservationNotFound {
	return &DeleteDHCPSubnetReservationNotFound{}
}

/*
DeleteDHCPSubnetReservationNotFound describes a response with status code 404, with default header values.

Invalid subnet ID or reservation MAC address was provided.
*/
type DeleteDHCPSubnetReservationNotFound struct {
}

// IsSuccess returns true when this delete d h c p subnet reservation not found response has a 2xx status code
func (o *DeleteDHCPSubnetReservationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d h c p subnet reservation not found response has a 3xx status code
func (o *DeleteDHCPSubnetReservationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d h c p subnet reservation not found response has a 4xx status code
func (o *DeleteDHCPSubnetReservationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete d h c p subnet reservation not found response has a 5xx status code
func (o *DeleteDHCPSubnetReservationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d h c p subnet reservation not found response a status code equal to that given
func (o *DeleteDHCPSubnetReservationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete d h c p subnet reservation not found response
func (o *DeleteDHCPSubnetReservationNotFound) Code() int {
	return 404
}

func (o *DeleteDHCPSubnetReservationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}/reservation/{macID}][%d] deleteDHCPSubnetReservationNotFound ", 404)
}

func (o *DeleteDHCPSubnetReservationNotFound) String() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}/reservation/{macID}][%d] deleteDHCPSubnetReservationNotFound ", 404)
}

func (o *DeleteDHCPSubnetReservationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDHCPSubnetReservationInternalServerError creates a DeleteDHCPSubnetReservationInternalServerError with default headers values
func NewDeleteDHCPSubnetReservationInternalServerError() *DeleteDHCPSubnetReservationInternalServerError {
	return &DeleteDHCPSubnetReservationInternalServerError{}
}

/*
DeleteDHCPSubnetReservationInternalServerError describes a response with status code 500, with default header values.

Unable to remove the requested reservation.
*/
type DeleteDHCPSubnetReservationInternalServerError struct {
}

// IsSuccess returns true when this delete d h c p subnet reservation internal server error response has a 2xx status code
func (o *DeleteDHCPSubnetReservationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d h c p subnet reservation internal server error response has a 3xx status code
func (o *DeleteDHCPSubnetReservationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d h c p subnet reservation internal server error response has a 4xx status code
func (o *DeleteDHCPSubnetReservationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete d h c p subnet reservation internal server error response has a 5xx status code
func (o *DeleteDHCPSubnetReservationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete d h c p subnet reservation internal server error response a status code equal to that given
func (o *DeleteDHCPSubnetReservationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete d h c p subnet reservation internal server error response
func (o *DeleteDHCPSubnetReservationInternalServerError) Code() int {
	return 500
}

func (o *DeleteDHCPSubnetReservationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}/reservation/{macID}][%d] deleteDHCPSubnetReservationInternalServerError ", 500)
}

func (o *DeleteDHCPSubnetReservationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}/reservation/{macID}][%d] deleteDHCPSubnetReservationInternalServerError ", 500)
}

func (o *DeleteDHCPSubnetReservationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
