// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteDHCPSubnetReader is a Reader for the DeleteDHCPSubnet structure.
type DeleteDHCPSubnetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDHCPSubnetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDHCPSubnetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteDHCPSubnetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteDHCPSubnetConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDHCPSubnetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDHCPSubnetOK creates a DeleteDHCPSubnetOK with default headers values
func NewDeleteDHCPSubnetOK() *DeleteDHCPSubnetOK {
	return &DeleteDHCPSubnetOK{}
}

/*
DeleteDHCPSubnetOK describes a response with status code 200, with default header values.

The subnet has been successfully removed.
*/
type DeleteDHCPSubnetOK struct {
}

// IsSuccess returns true when this delete d h c p subnet o k response has a 2xx status code
func (o *DeleteDHCPSubnetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete d h c p subnet o k response has a 3xx status code
func (o *DeleteDHCPSubnetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d h c p subnet o k response has a 4xx status code
func (o *DeleteDHCPSubnetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete d h c p subnet o k response has a 5xx status code
func (o *DeleteDHCPSubnetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d h c p subnet o k response a status code equal to that given
func (o *DeleteDHCPSubnetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete d h c p subnet o k response
func (o *DeleteDHCPSubnetOK) Code() int {
	return 200
}

func (o *DeleteDHCPSubnetOK) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetOK ", 200)
}

func (o *DeleteDHCPSubnetOK) String() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetOK ", 200)
}

func (o *DeleteDHCPSubnetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDHCPSubnetNotFound creates a DeleteDHCPSubnetNotFound with default headers values
func NewDeleteDHCPSubnetNotFound() *DeleteDHCPSubnetNotFound {
	return &DeleteDHCPSubnetNotFound{}
}

/*
DeleteDHCPSubnetNotFound describes a response with status code 404, with default header values.

Invalid subnet ID was provided.
*/
type DeleteDHCPSubnetNotFound struct {
}

// IsSuccess returns true when this delete d h c p subnet not found response has a 2xx status code
func (o *DeleteDHCPSubnetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d h c p subnet not found response has a 3xx status code
func (o *DeleteDHCPSubnetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d h c p subnet not found response has a 4xx status code
func (o *DeleteDHCPSubnetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete d h c p subnet not found response has a 5xx status code
func (o *DeleteDHCPSubnetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d h c p subnet not found response a status code equal to that given
func (o *DeleteDHCPSubnetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete d h c p subnet not found response
func (o *DeleteDHCPSubnetNotFound) Code() int {
	return 404
}

func (o *DeleteDHCPSubnetNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetNotFound ", 404)
}

func (o *DeleteDHCPSubnetNotFound) String() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetNotFound ", 404)
}

func (o *DeleteDHCPSubnetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDHCPSubnetConflict creates a DeleteDHCPSubnetConflict with default headers values
func NewDeleteDHCPSubnetConflict() *DeleteDHCPSubnetConflict {
	return &DeleteDHCPSubnetConflict{}
}

/*
DeleteDHCPSubnetConflict describes a response with status code 409, with default header values.

The subnet is not empty or still has reservations.
*/
type DeleteDHCPSubnetConflict struct {
}

// IsSuccess returns true when this delete d h c p subnet conflict response has a 2xx status code
func (o *DeleteDHCPSubnetConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d h c p subnet conflict response has a 3xx status code
func (o *DeleteDHCPSubnetConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d h c p subnet conflict response has a 4xx status code
func (o *DeleteDHCPSubnetConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete d h c p subnet conflict response has a 5xx status code
func (o *DeleteDHCPSubnetConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this delete d h c p subnet conflict response a status code equal to that given
func (o *DeleteDHCPSubnetConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the delete d h c p subnet conflict response
func (o *DeleteDHCPSubnetConflict) Code() int {
	return 409
}

func (o *DeleteDHCPSubnetConflict) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetConflict ", 409)
}

func (o *DeleteDHCPSubnetConflict) String() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetConflict ", 409)
}

func (o *DeleteDHCPSubnetConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDHCPSubnetInternalServerError creates a DeleteDHCPSubnetInternalServerError with default headers values
func NewDeleteDHCPSubnetInternalServerError() *DeleteDHCPSubnetInternalServerError {
	return &DeleteDHCPSubnetInternalServerError{}
}

/*
DeleteDHCPSubnetInternalServerError describes a response with status code 500, with default header values.

Unable to remove the requested subnet.
*/
type DeleteDHCPSubnetInternalServerError struct {
}

// IsSuccess returns true when this delete d h c p subnet internal server error response has a 2xx status code
func (o *DeleteDHCPSubnetInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete d h c p subnet internal server error response has a 3xx status code
func (o *DeleteDHCPSubnetInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete d h c p subnet internal server error response has a 4xx status code
func (o *DeleteDHCPSubnetInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete d h c p subnet internal server error response has a 5xx status code
func (o *DeleteDHCPSubnetInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete d h c p subnet internal server error response a status code equal to that given
func (o *DeleteDHCPSubnetInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete d h c p subnet internal server error response
func (o *DeleteDHCPSubnetInternalServerError) Code() int {
	return 500
}

func (o *DeleteDHCPSubnetInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetInternalServerError ", 500)
}

func (o *DeleteDHCPSubnetInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /dhcp/subnet/{subnetId}][%d] deleteDHCPSubnetInternalServerError ", 500)
}

func (o *DeleteDHCPSubnetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
