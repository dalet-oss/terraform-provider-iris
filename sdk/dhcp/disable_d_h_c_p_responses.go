// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DisableDHCPReader is a Reader for the DisableDHCP structure.
type DisableDHCPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableDHCPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewDisableDHCPCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 409:
		result := NewDisableDHCPConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDisableDHCPInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDisableDHCPCreated creates a DisableDHCPCreated with default headers values
func NewDisableDHCPCreated() *DisableDHCPCreated {
	return &DisableDHCPCreated{}
}

/*
DisableDHCPCreated describes a response with status code 201, with default header values.

The DHCPv4 service has been disabled.
*/
type DisableDHCPCreated struct {
}

// IsSuccess returns true when this disable d h c p created response has a 2xx status code
func (o *DisableDHCPCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disable d h c p created response has a 3xx status code
func (o *DisableDHCPCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable d h c p created response has a 4xx status code
func (o *DisableDHCPCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable d h c p created response has a 5xx status code
func (o *DisableDHCPCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this disable d h c p created response a status code equal to that given
func (o *DisableDHCPCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the disable d h c p created response
func (o *DisableDHCPCreated) Code() int {
	return 201
}

func (o *DisableDHCPCreated) Error() string {
	return fmt.Sprintf("[POST /dhcp/disable][%d] disableDHCPCreated ", 201)
}

func (o *DisableDHCPCreated) String() string {
	return fmt.Sprintf("[POST /dhcp/disable][%d] disableDHCPCreated ", 201)
}

func (o *DisableDHCPCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableDHCPConflict creates a DisableDHCPConflict with default headers values
func NewDisableDHCPConflict() *DisableDHCPConflict {
	return &DisableDHCPConflict{}
}

/*
DisableDHCPConflict describes a response with status code 409, with default header values.

The DHCPv4 service was already disable.
*/
type DisableDHCPConflict struct {
}

// IsSuccess returns true when this disable d h c p conflict response has a 2xx status code
func (o *DisableDHCPConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable d h c p conflict response has a 3xx status code
func (o *DisableDHCPConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable d h c p conflict response has a 4xx status code
func (o *DisableDHCPConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this disable d h c p conflict response has a 5xx status code
func (o *DisableDHCPConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this disable d h c p conflict response a status code equal to that given
func (o *DisableDHCPConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the disable d h c p conflict response
func (o *DisableDHCPConflict) Code() int {
	return 409
}

func (o *DisableDHCPConflict) Error() string {
	return fmt.Sprintf("[POST /dhcp/disable][%d] disableDHCPConflict ", 409)
}

func (o *DisableDHCPConflict) String() string {
	return fmt.Sprintf("[POST /dhcp/disable][%d] disableDHCPConflict ", 409)
}

func (o *DisableDHCPConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableDHCPInternalServerError creates a DisableDHCPInternalServerError with default headers values
func NewDisableDHCPInternalServerError() *DisableDHCPInternalServerError {
	return &DisableDHCPInternalServerError{}
}

/*
DisableDHCPInternalServerError describes a response with status code 500, with default header values.

Unable to disable the DHCPv4 service.
*/
type DisableDHCPInternalServerError struct {
}

// IsSuccess returns true when this disable d h c p internal server error response has a 2xx status code
func (o *DisableDHCPInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable d h c p internal server error response has a 3xx status code
func (o *DisableDHCPInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable d h c p internal server error response has a 4xx status code
func (o *DisableDHCPInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable d h c p internal server error response has a 5xx status code
func (o *DisableDHCPInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this disable d h c p internal server error response a status code equal to that given
func (o *DisableDHCPInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the disable d h c p internal server error response
func (o *DisableDHCPInternalServerError) Code() int {
	return 500
}

func (o *DisableDHCPInternalServerError) Error() string {
	return fmt.Sprintf("[POST /dhcp/disable][%d] disableDHCPInternalServerError ", 500)
}

func (o *DisableDHCPInternalServerError) String() string {
	return fmt.Sprintf("[POST /dhcp/disable][%d] disableDHCPInternalServerError ", 500)
}

func (o *DisableDHCPInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
