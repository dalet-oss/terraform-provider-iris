// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllDHCPSubnetReservationsReader is a Reader for the GetAllDHCPSubnetReservations structure.
type GetAllDHCPSubnetReservationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllDHCPSubnetReservationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllDHCPSubnetReservationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetAllDHCPSubnetReservationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAllDHCPSubnetReservationsOK creates a GetAllDHCPSubnetReservationsOK with default headers values
func NewGetAllDHCPSubnetReservationsOK() *GetAllDHCPSubnetReservationsOK {
	return &GetAllDHCPSubnetReservationsOK{}
}

/*
GetAllDHCPSubnetReservationsOK describes a response with status code 200, with default header values.

Returns the an array of subnet's reserved MAC addresses.
*/
type GetAllDHCPSubnetReservationsOK struct {
	Payload []string
}

// IsSuccess returns true when this get all d h c p subnet reservations o k response has a 2xx status code
func (o *GetAllDHCPSubnetReservationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all d h c p subnet reservations o k response has a 3xx status code
func (o *GetAllDHCPSubnetReservationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all d h c p subnet reservations o k response has a 4xx status code
func (o *GetAllDHCPSubnetReservationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all d h c p subnet reservations o k response has a 5xx status code
func (o *GetAllDHCPSubnetReservationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all d h c p subnet reservations o k response a status code equal to that given
func (o *GetAllDHCPSubnetReservationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all d h c p subnet reservations o k response
func (o *GetAllDHCPSubnetReservationsOK) Code() int {
	return 200
}

func (o *GetAllDHCPSubnetReservationsOK) Error() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation][%d] getAllDHCPSubnetReservationsOK  %+v", 200, o.Payload)
}

func (o *GetAllDHCPSubnetReservationsOK) String() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation][%d] getAllDHCPSubnetReservationsOK  %+v", 200, o.Payload)
}

func (o *GetAllDHCPSubnetReservationsOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAllDHCPSubnetReservationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllDHCPSubnetReservationsNotFound creates a GetAllDHCPSubnetReservationsNotFound with default headers values
func NewGetAllDHCPSubnetReservationsNotFound() *GetAllDHCPSubnetReservationsNotFound {
	return &GetAllDHCPSubnetReservationsNotFound{}
}

/*
GetAllDHCPSubnetReservationsNotFound describes a response with status code 404, with default header values.

Invalid subnet ID was provided.
*/
type GetAllDHCPSubnetReservationsNotFound struct {
}

// IsSuccess returns true when this get all d h c p subnet reservations not found response has a 2xx status code
func (o *GetAllDHCPSubnetReservationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all d h c p subnet reservations not found response has a 3xx status code
func (o *GetAllDHCPSubnetReservationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all d h c p subnet reservations not found response has a 4xx status code
func (o *GetAllDHCPSubnetReservationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all d h c p subnet reservations not found response has a 5xx status code
func (o *GetAllDHCPSubnetReservationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all d h c p subnet reservations not found response a status code equal to that given
func (o *GetAllDHCPSubnetReservationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all d h c p subnet reservations not found response
func (o *GetAllDHCPSubnetReservationsNotFound) Code() int {
	return 404
}

func (o *GetAllDHCPSubnetReservationsNotFound) Error() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation][%d] getAllDHCPSubnetReservationsNotFound ", 404)
}

func (o *GetAllDHCPSubnetReservationsNotFound) String() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation][%d] getAllDHCPSubnetReservationsNotFound ", 404)
}

func (o *GetAllDHCPSubnetReservationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
