// Code generated by go-swagger; DO NOT EDIT.

package dhcp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/dalet-oss/terraform-provider-iris/models"
)

// GetDHCPSubnetReservationReader is a Reader for the GetDHCPSubnetReservation structure.
type GetDHCPSubnetReservationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDHCPSubnetReservationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDHCPSubnetReservationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetDHCPSubnetReservationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDHCPSubnetReservationOK creates a GetDHCPSubnetReservationOK with default headers values
func NewGetDHCPSubnetReservationOK() *GetDHCPSubnetReservationOK {
	return &GetDHCPSubnetReservationOK{}
}

/*
GetDHCPSubnetReservationOK describes a response with status code 200, with default header values.

Returns the DHCP Reservation object.
*/
type GetDHCPSubnetReservationOK struct {
	Payload *models.Reservation
}

// IsSuccess returns true when this get d h c p subnet reservation o k response has a 2xx status code
func (o *GetDHCPSubnetReservationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get d h c p subnet reservation o k response has a 3xx status code
func (o *GetDHCPSubnetReservationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get d h c p subnet reservation o k response has a 4xx status code
func (o *GetDHCPSubnetReservationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get d h c p subnet reservation o k response has a 5xx status code
func (o *GetDHCPSubnetReservationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get d h c p subnet reservation o k response a status code equal to that given
func (o *GetDHCPSubnetReservationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get d h c p subnet reservation o k response
func (o *GetDHCPSubnetReservationOK) Code() int {
	return 200
}

func (o *GetDHCPSubnetReservationOK) Error() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation/{macID}][%d] getDHCPSubnetReservationOK  %+v", 200, o.Payload)
}

func (o *GetDHCPSubnetReservationOK) String() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation/{macID}][%d] getDHCPSubnetReservationOK  %+v", 200, o.Payload)
}

func (o *GetDHCPSubnetReservationOK) GetPayload() *models.Reservation {
	return o.Payload
}

func (o *GetDHCPSubnetReservationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Reservation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDHCPSubnetReservationNotFound creates a GetDHCPSubnetReservationNotFound with default headers values
func NewGetDHCPSubnetReservationNotFound() *GetDHCPSubnetReservationNotFound {
	return &GetDHCPSubnetReservationNotFound{}
}

/*
GetDHCPSubnetReservationNotFound describes a response with status code 404, with default header values.

Invalid subnet ID or reservation MAC address was provided.
*/
type GetDHCPSubnetReservationNotFound struct {
}

// IsSuccess returns true when this get d h c p subnet reservation not found response has a 2xx status code
func (o *GetDHCPSubnetReservationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get d h c p subnet reservation not found response has a 3xx status code
func (o *GetDHCPSubnetReservationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get d h c p subnet reservation not found response has a 4xx status code
func (o *GetDHCPSubnetReservationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get d h c p subnet reservation not found response has a 5xx status code
func (o *GetDHCPSubnetReservationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get d h c p subnet reservation not found response a status code equal to that given
func (o *GetDHCPSubnetReservationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get d h c p subnet reservation not found response
func (o *GetDHCPSubnetReservationNotFound) Code() int {
	return 404
}

func (o *GetDHCPSubnetReservationNotFound) Error() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation/{macID}][%d] getDHCPSubnetReservationNotFound ", 404)
}

func (o *GetDHCPSubnetReservationNotFound) String() string {
	return fmt.Sprintf("[GET /dhcp/subnet/{subnetId}/reservation/{macID}][%d] getDHCPSubnetReservationNotFound ", 404)
}

func (o *GetDHCPSubnetReservationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
